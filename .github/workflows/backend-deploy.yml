name: Backend Deploy

on:
  push:
    branches: [ develop ]
    paths:
      - 'Backend/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    # 코드 가져오기
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Java 17 설치
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    # .env 파일 생성
    - name: Create nimn.env file
      working-directory: ./Backend
      run: |
        cat > nimn.env << EOF
        SPRING_PROFILES_ACTIVE=prod
        AWS_HOST=${{ secrets.AWS_HOST }}
        DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
        DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
        OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
        OPENAI_CHAT_MODEL=${{ secrets.OPENAI_CHAT_MODEL }}
        OPENAI_CHAT_URL=${{ secrets.OPENAI_CHAT_URL }}
        OPENAI_IMAGE_MODEL=${{ secrets.OPENAI_IMAGE_MODEL }}
        OPENAI_IMAGE_URL=${{ secrets.OPENAI_IMAGE_URL }}
        import_apiKey=${{ secrets.import_apiKey }}
        import_secretKey=${{ secrets.import_secretKey }}
        JWT_SECRET=${{ secrets.JWT_SECRET }}
        GOOGLE_EMAIL=${{ secrets.GOOGLE_EMAIL }}
        GOOGLE_APP_PASSWORD=${{ secrets.GOOGLE_APP_PASSWORD }}
        EOF
    
    # 빌드 권한 설정
    - name: Grant execute permission for gradlew
      working-directory: ./Backend
      run: chmod +x gradlew
    
    # 애플리케이션 빌드
    - name: Build application
      working-directory: ./Backend
      run: ./gradlew build -x test
    
    # 배포 스크립트 생성
    - name: Create deploy script
      run: |
        cat > deploy.sh << 'EOF'
        #!/bin/bash
        set -e
        echo "=== Starting Deployment ==="
        cd ~/nimn
        
        # 기존 프로세스 종료
        pkill -f "java -jar" || true
        
        # 환경 파일 & JAR 파일 확인
        [ ! -f nimn.env ] && echo "Error: nimn.env not found" && exit 1
        JAR_FILE=$(ls *.jar 2>/dev/null | head -1)
        [ -z "$JAR_FILE" ] && echo "Error: No JAR file found" && exit 1
        
        # 애플리케이션 시작
        echo "Starting $JAR_FILE..."
        nohup env $(cat nimn.env | xargs) java -jar $JAR_FILE > app.log 2>&1 &
        
        # 시작 확인
        for i in {1..30}; do
          if pgrep -f "java -jar" > /dev/null; then
            echo "Application started successfully! PID: $(pgrep -f "java -jar")"
            echo "=== Deployment Completed ==="
            exit 0
          fi
          sleep 1
        done

        echo "Failed to start application"
        tail -10 app.log
        exit 1
        EOF
        
        chmod +x deploy.sh
    
    # 배포 파일들을 한 곳에 모으기
    - name: Prepare deployment files
      run: |
        mkdir -p deployment
        cp Backend/build/libs/*.jar deployment/
        cp Backend/nimn.env deployment/
        cp deploy.sh deployment/
    
    # 파일 전송
    - name: Copy files to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USERNAME }}
        key: ${{ secrets.AWS_SSH_KEY }}
        source: "deployment/*"
        target: ~/nimn/
        strip_components: 1
        overwrite: true
        timeout: 300s
    
    # SSH로 배포 스크립트 실행
    - name: Execute deployment script
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USERNAME }}
        key: ${{ secrets.AWS_SSH_KEY }}
        script: |
          cd ~/nimn
          chmod +x deploy.sh
          ./deploy.sh
        timeout: 300s

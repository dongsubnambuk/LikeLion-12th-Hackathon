name: Backend Deploy

# Backend 폴더가 변경될 때만 실행
on:
  push:
    branches: [ develop ]
    paths:
      - 'Backend/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    # 코드 가져오기
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Java 17 설치
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    # .env 파일 생성
    - name: Create nimn.env file
      working-directory: ./Backend
      run: |
        cat > nimn.env << EOF
        SPRING_PROFILES_ACTIVE=prod
        AWS_HOST=${{ secrets.AWS_HOST }}
        DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
        DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
        OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
        OPENAI_CHAT_MODEL=${{ secrets.OPENAI_CHAT_MODEL }}
        OPENAI_CHAT_URL=${{ secrets.OPENAI_CHAT_URL }}
        OPENAI_IMAGE_MODEL=${{ secrets.OPENAI_IMAGE_MODEL }}
        OPENAI_IMAGE_URL=${{ secrets.OPENAI_IMAGE_URL }}
        import_apiKey=${{ secrets.import_apiKey }}
        import_secretKey=${{ secrets.import_secretKey }}
        JWT_SECRET=${{ secrets.JWT_SECRET }}
        GOOGLE_EMAIL=${{ secrets.GOOGLE_EMAIL }}
        GOOGLE_APP_PASSWORD=${{ secrets.GOOGLE_APP_PASSWORD }}
        EOF
    
    # 빌드 권한 설정
    - name: Grant execute permission for gradlew
      working-directory: ./Backend
      run: chmod +x gradlew
    
    # 애플리케이션 빌드
    - name: Build application
      working-directory: ./Backend
      run: ./gradlew build -x test
    
    # AWS 서버에 JAR 파일 전송
    - name: Copy JAR to server
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USERNAME }}
        key: ${{ secrets.AWS_SSH_KEY }}
        port: 22
        source: "Backend/build/libs/*.jar"
        target: "~/nimn/"
        strip_components: 3
    
    # AWS 서버에 .env 파일 전송
    - name: Copy env file to server
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USERNAME }}
        key: ${{ secrets.AWS_SSH_KEY }}
        port: 22
        source: "Backend/nimn.env"
        target: "~/nimn/"
        strip_components: 1
    
    # 서버에서 애플리케이션 재시작
    - name: Deploy on server
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USERNAME }}
        key: ${{ secrets.AWS_SSH_KEY }}
        port: 22
        script: |
          # 기존 애플리케이션 중지
          pkill -f 'nimn.*\.jar' || true
          
          # 앱 실행 할 디렉토리로 이동
          cd ~/nimn
          
          # 백그라운드로 새 애플리케이션 시작
          nohup java -jar *.jar > app.log 2>&1 &

          sleep 5

          echo "Deployment finished"